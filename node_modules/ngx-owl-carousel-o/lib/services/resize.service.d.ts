import { EventManager } from '@angular/platform-browser';
import { Observable } from 'rxjs';
import * as ɵngcc0 from '@angular/core';
export declare class ResizeService {
    private eventManager;
    /**
     * Width of window
     */
    windowWidth: any;
    /**
     * Makes resizeSubject become Observable
     * @returns Observable of resizeSubject
     */
    get onResize$(): Observable<Window>;
    /**
     * Subject of 'resize' event
     */
    private resizeSubject;
    constructor(eventManager: EventManager);
    /**
     * Handler of 'resize' event. Passes data throw resizeSubject
     * @param event Event Object of 'resize' event
     */
    private onResize;
    /**
     * Handler of 'onload' event. Defines the width of window
     * @param event Event Object of 'onload' event
     */
    private onLoaded;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ResizeService, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<ResizeService>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVzaXplLnNlcnZpY2UuZC50cyIsInNvdXJjZXMiOlsicmVzaXplLnNlcnZpY2UuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRXZlbnRNYW5hZ2VyIH0gZnJvbSAnQGFuZ3VsYXIvcGxhdGZvcm0tYnJvd3Nlcic7XHJcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcclxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgUmVzaXplU2VydmljZSB7XHJcbiAgICBwcml2YXRlIGV2ZW50TWFuYWdlcjtcclxuICAgIC8qKlxyXG4gICAgICogV2lkdGggb2Ygd2luZG93XHJcbiAgICAgKi9cclxuICAgIHdpbmRvd1dpZHRoOiBhbnk7XHJcbiAgICAvKipcclxuICAgICAqIE1ha2VzIHJlc2l6ZVN1YmplY3QgYmVjb21lIE9ic2VydmFibGVcclxuICAgICAqIEByZXR1cm5zIE9ic2VydmFibGUgb2YgcmVzaXplU3ViamVjdFxyXG4gICAgICovXHJcbiAgICBnZXQgb25SZXNpemUkKCk6IE9ic2VydmFibGU8V2luZG93PjtcclxuICAgIC8qKlxyXG4gICAgICogU3ViamVjdCBvZiAncmVzaXplJyBldmVudFxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIHJlc2l6ZVN1YmplY3Q7XHJcbiAgICBjb25zdHJ1Y3RvcihldmVudE1hbmFnZXI6IEV2ZW50TWFuYWdlcik7XHJcbiAgICAvKipcclxuICAgICAqIEhhbmRsZXIgb2YgJ3Jlc2l6ZScgZXZlbnQuIFBhc3NlcyBkYXRhIHRocm93IHJlc2l6ZVN1YmplY3RcclxuICAgICAqIEBwYXJhbSBldmVudCBFdmVudCBPYmplY3Qgb2YgJ3Jlc2l6ZScgZXZlbnRcclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBvblJlc2l6ZTtcclxuICAgIC8qKlxyXG4gICAgICogSGFuZGxlciBvZiAnb25sb2FkJyBldmVudC4gRGVmaW5lcyB0aGUgd2lkdGggb2Ygd2luZG93XHJcbiAgICAgKiBAcGFyYW0gZXZlbnQgRXZlbnQgT2JqZWN0IG9mICdvbmxvYWQnIGV2ZW50XHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgb25Mb2FkZWQ7XHJcbn1cclxuIl19